     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0200                        a dw 2
    15 00000002 01                          b db 1
    16 00000003 0300                        c dw 3
    17 00000005 04                          d db 4
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 66A1[00000000]                  mov ax, [a]
    24 00000006 6683C002                        add ax, 2
    25 0000000A 668B1D[02000000]                mov bx, [b]
    26 00000011 6629D8                          sub ax, bx
    27 00000014 668B1D[05000000]                mov bx, [d]
    28 0000001B 6601D8                          add ax, bx
    29                                      
    30                                          ; exit(0)
    31 0000001E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    32 00000020 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
