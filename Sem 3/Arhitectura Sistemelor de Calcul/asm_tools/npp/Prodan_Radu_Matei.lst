     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      ;E=a / (b - c) + d, a byte, b, word, c byte, d doubleword
    15                                      ; e = 10 / (4 - 2) + 1
    16 00000000 0A                          a db 10
    17 00000001 0400                        b dw 4
    18 00000003 02                          c db 2
    19 00000004 01000000                    d dd 1
    20                                  
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ; ...
    25 00000000 668B1D[01000000]                mov bx, [b]
    26 00000007 A0[03000000]                    mov al, [c]
    27 0000000C 6698                            cbw
    28 0000000E 6629C3                          sub bx, ax; bx = bx - ax
    29 00000011 A0[00000000]                    mov al, [a]
    30 00000016 6698                            cbw
    31 00000018 6699                            cwd
    32 0000001A 66F7FB                          idiv bx; ax = cat, dx = rest
    33 0000001D 6699                            cwd
    34 0000001F 8B1D[04000000]                  mov ebx, [d]
    35 00000025 6652                            push dx
    36 00000027 6650                            push ax
    37 00000029 58                              pop eax
    38 0000002A 01C3                            add ebx, eax
    39                                          
    40                                          
    41                                          
    42                                          
    43                                          ; exit(0)
    44 0000002C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    45 0000002E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
